{"version":3,"file":"static/js/994.53037d79.chunk.js","mappings":"sSAEaA,EAAOC,EAAAA,QAAAA,KAAH,yCAIJC,EAAQD,EAAAA,QAAAA,MAAH,6FAMLE,EAASF,EAAAA,QAAAA,OAAH,uEAGN,qBAAGG,MAASC,OAAsBC,UAAlC,IAIAC,EAAYN,EAAAA,QAAAA,IAAH,2D,UCTTO,EAAe,WAC1B,IAAQC,GAAUC,EAAAA,EAAAA,KAAVD,MAEFE,GAAWC,EAAAA,EAAAA,MAEjB,GAIIC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,WAHlBC,EADF,EACEA,SADF,IAEEC,UAAaC,EAFf,EAEeA,OAAQC,EAFvB,EAEuBA,QACrBC,EAHF,EAGEA,aAOF,OACE,UAACnB,EAAD,CAAMoB,aAAa,MAAMC,SAAUF,GALpB,SAAAG,GACfX,GAASY,EAAAA,EAAAA,IAAaD,GACvB,IAGC,WACE,UAACpB,EAAD,uBAEE,0BACEsB,KAAK,QACDT,EAAS,OAAQ,CACnBU,SAAU,oBACVC,QAAS,CACPC,MACE,yHACFC,QACE,0IAEJC,UAAW,CACTF,MAAO,EACPC,QAAS,2CAIf,SAACrB,EAAD,WACS,OAANU,QAAM,IAANA,OAAA,EAAAA,EAAQa,QAAQ,wBAAU,OAANb,QAAM,IAANA,OAAA,EAAAA,EAAQa,KAAKF,UAAW,gBAGjD,UAAC1B,EAAD,oBAEE,0BACEsB,KAAK,SACDT,EAAS,QAAS,CACpBU,SAAU,oBACVC,QACE,6EAGN,SAACnB,EAAD,WACS,OAANU,QAAM,IAANA,OAAA,EAAAA,EAAQc,SACP,wBACS,OAANd,QAAM,IAANA,OAAA,EAAAA,EAAQc,MAAMH,UACb,0DAKV,UAAC1B,EAAD,uBAEE,0BACEsB,KAAK,YACDT,EAAS,WAAY,CACvBc,UAAW,CACTF,MAAO,EACPC,QAAS,iDAEXF,QAAS,gBAGb,SAACnB,EAAD,WACS,OAANU,QAAM,IAANA,OAAA,EAAAA,EAAQe,YAAY,wBAAU,OAANf,QAAM,IAANA,OAAA,EAAAA,EAAQe,SAASJ,UAAW,gBAGzD,SAACzB,EAAD,CAAQ8B,UAAWf,EAASM,KAAK,SAAjC,sBAGCf,IAAS,cAAGyB,MAAO,CAAEC,MAAO,OAAnB,wCAGf,E,UCtFYC,EAAYnC,EAAAA,QAAAA,IAAH,0IACJoC,EAAAA,EAAAA,WADI,wBACQC,EAAAA,KCDjBC,EAAW,WACtB,OACE,SAACH,EAAD,WACE,SAAC5B,EAAD,KAGL,EAED,G","sources":["components/Auth/RegisterForm/RegisterFormStyled.jsx","components/Auth/RegisterForm/RegisterForm.js","pages/Register/RegisterStyled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Button = styled.button`\n  &:hover,\n  &:focus {\n    color: ${({ theme: { colors } }) => colors.activeLink};\n  }\n`;\n\nexport const ErrorText = styled.div`\n  margin-top: 5px;\n  color: red;\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { useForm } from 'react-hook-form';\n\nimport { registerForm } from 'redux/auth/operations';\n\nimport { useAuth } from 'hooks';\n\nimport { Form, Label, Button, ErrorText } from './RegisterFormStyled';\n\nexport const RegisterForm = () => {\n  const { error } = useAuth();\n\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    formState: { errors, isValid },\n    handleSubmit,\n  } = useForm({ mode: 'onBlur' });\n\n  const onSubmit = data => {\n    dispatch(registerForm(data));\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n      <Label>\n        Username\n        <input\n          type=\"text\"\n          {...register('name', {\n            required: 'Field is required',\n            pattern: {\n              value:\n                /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n              message:\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            },\n            minLength: {\n              value: 3,\n              message: 'Name length must be greater than 3',\n            },\n          })}\n        />\n        <ErrorText>\n          {errors?.name && <p>{errors?.name.message || 'Error'}</p>}\n        </ErrorText>\n      </Label>\n      <Label>\n        Email\n        <input\n          type=\"email\"\n          {...register('email', {\n            required: 'Field is required',\n            pattern:\n              /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n          })}\n        />\n        <ErrorText>\n          {errors?.email && (\n            <p>\n              {errors?.email.message ||\n                'Please enter a valid email e.g. \"test@mail.com\"'}\n            </p>\n          )}\n        </ErrorText>\n      </Label>\n      <Label>\n        Password\n        <input\n          type=\"password\"\n          {...register('password', {\n            minLength: {\n              value: 7,\n              message: 'Password length must be at least 7 characters',\n            },\n            pattern: /[A-Za-z]/,\n          })}\n        />\n        <ErrorText>\n          {errors?.password && <p>{errors?.password.message || 'Error'}</p>}\n        </ErrorText>\n      </Label>\n      <Button disabled={!isValid} type=\"submit\">\n        Register\n      </Button>\n      {error && <p style={{ color: 'red' }}>This user already exists</p>}\n    </Form>\n  );\n};\n","import { fadeIn } from 'react-animations';\n\nimport styled, { keyframes } from 'styled-components';\n\nexport const Container = styled.div`\n  animation: 5s ${keyframes`${fadeIn}`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { RegisterForm } from 'components/Auth/RegisterForm/RegisterForm';\n\nimport { Container } from './RegisterStyled';\n\nexport const Register = () => {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n};\n\nexport default Register;\n"],"names":["Form","styled","Label","Button","theme","colors","activeLink","ErrorText","RegisterForm","error","useAuth","dispatch","useDispatch","useForm","mode","register","formState","errors","isValid","handleSubmit","autoComplete","onSubmit","data","registerForm","type","required","pattern","value","message","minLength","name","email","password","disabled","style","color","Container","keyframes","fadeIn","Register"],"sourceRoot":""}