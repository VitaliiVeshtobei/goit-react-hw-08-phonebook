{"version":3,"file":"static/js/747.b7182718.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Contacts/Form/FormStyled.jsx","components/Contacts/Form/Form.js","components/Contacts/ContactsList/ContactsListStyled.jsx","components/Contacts/ContactsList/ContactsList.js","components/Contacts/Filter/FilterStyled.jsx","components/Contacts/Filter/Filter.js","pages/Contacts/ContactsStyled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(normalizedFilter);\n    });\n    return visibleContacts;\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin-left: 10px;\n  margin-right: 10px;\n  height: 20px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border-color: transparent;\n`;\n\nexport const Button = styled.button`\n  color: #fff;\n  background-color: ${({ theme: { colors } }) => colors.activeLink};\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.4;\n  /* letter-spacing: 0.06em; */\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-property: red;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: ${({ theme: { colors } }) => colors.title};\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 22px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from '../../../redux/contacts/operations';\n\nimport { Input, Button, Label } from './FormStyled';\n\nexport function Form() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = evt.target.elements.name.value;\n    const number = evt.target.elements.number.value;\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <div>\n      <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </div>\n  );\n}\n","import { fadeInLeft } from 'react-animations';\n\nimport styled, { keyframes } from 'styled-components';\n\nexport const ButtonContact = styled.button`\n  margin-left: 10px;\n  color: #fff;\n  background-color: ${({ theme: { colors } }) => colors.activeLink};\n  font-size: 12px;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: ${({ theme: { colors } }) => colors.title};\n  }\n`;\n\nexport const ListContatcts = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\nexport const ItemContact = styled.li`\n  animation: 0.5s ${keyframes`${fadeInLeft}`};\n  font-size: 22px;\n  margin-top: 10px;\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts } from '../../../redux/contacts/operations';\nimport { deleteContact } from '../../../redux/contacts/operations';\nimport {\n  selectContacts,\n  selectVisibleContacts,\n} from '../../../redux/contacts/selectors';\n\nimport {\n  ButtonContact,\n  ListContatcts,\n  ItemContact,\n} from './ContactsListStyled';\n\nexport function ContactsList() {\n  const dispatch = useDispatch();\n\n  const { isLoading, error } = useSelector(selectContacts);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const onClick = id => {\n    dispatch(deleteContact(id));\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ListContatcts>\n      {isLoading && <p>Loading tasks...</p>}\n      {error && <p>{error}</p>}\n      {visibleContacts.map(contact => {\n        return (\n          <ItemContact key={contact.id}>\n            {contact.name}: {contact.number}\n            <ButtonContact\n              type=\"button\"\n              onClick={() => {\n                onClick(contact.id);\n              }}\n            >\n              Delete\n            </ButtonContact>\n          </ItemContact>\n        );\n      })}\n    </ListContatcts>\n  );\n}\n","import styled from 'styled-components';\n\nexport const InputFilter = styled.input`\n  margin-left: 10px;\n  margin-right: 10px;\n  height: 20px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border-color: transparent;\n`;\n\nexport const Label = styled.label`\n  margin-top: 70px;\n  font-size: 22px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilter } from '../../../redux/contacts/selectors';\nimport { setFilter } from '../../../redux/contacts/slices/filterSlice';\n\nimport { InputFilter, Label } from './FilterStyled';\n\nexport function Filter() {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contacts by name\n      <InputFilter\n        type=\"text\"\n        value={value}\n        onChange={evt => {\n          dispatch(setFilter(evt.currentTarget.value));\n        }}\n      ></InputFilter>\n    </Label>\n  );\n}\n","import { fadeIn, bounceInDown } from 'react-animations';\n\nimport styled, { keyframes } from 'styled-components';\n\nexport const Container = styled.div`\n  animation: 5s ${keyframes`${fadeIn}`};\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 100px;\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  animation: 3s ${keyframes`${bounceInDown}`};\n  font-size: 70px;\n  color: ${({ theme: { colors } }) => colors.title};\n  text-shadow: 3px 5px 2px #474747;\n`;\n\nexport const ContainerFormFilter = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TitleContacts = styled.h2`\n  font-size: 42px;\n  text-shadow: 3px 5px 2px #474747;\n  color: ${({ theme: { colors } }) => colors.title};\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport { Form } from '../../components/Contacts/Form/Form';\nimport { ContactsList } from '../../components/Contacts/ContactsList/ContactsList';\nimport { Filter } from '../../components/Contacts/Filter/Filter';\n\nimport {\n  Container,\n  Title,\n  ContainerFormFilter,\n  TitleContacts,\n} from './ContactsStyled';\n\nexport const Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <Container>\n        <ContainerFormFilter>\n          <Form />\n          <Filter />\n        </ContainerFormFilter>\n        <div>\n          <TitleContacts>Contacts</TitleContacts>\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactsList />\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","normalizedFilter","toLowerCase","contact","includes","Input","styled","Button","theme","colors","activeLink","title","Label","Form","dispatch","useDispatch","autoComplete","onSubmit","evt","preventDefault","form","target","elements","number","addContact","reset","htmlFor","type","pattern","required","ButtonContact","ListContatcts","ItemContact","keyframes","fadeInLeft","ContactsList","useSelector","visibleContacts","useEffect","fetchContacts","onClick","id","deleteContact","InputFilter","Filter","onChange","setFilter","currentTarget","Container","fadeIn","Title","bounceInDown","ContainerFormFilter","TitleContacts","Contacts"],"sourceRoot":""}